# ConeSTELLATION 더미 퍼블리셔 설정 파일

dummy_publisher:
  ros__parameters:
    # 시나리오 설정
    scenario:
      id: 2                    # 1: 직선 트랙 (AEB 테스트용), 2: Formula Student 트랙 (타원형)
      
    # 퍼블리싱 주기 (Hz = 초당 횟수)
    publish_rates:
      cones: 20.0             # 콘 관측 데이터 퍼블리싱 주기 (초당 20회)
      imu: 100.0              # IMU 데이터 퍼블리싱 주기 (초당 100회)
      gps: 8.0                # GPS 위치 데이터 퍼블리싱 주기 (초당 8회)
      odometry: 100.0         # 오도메트리 시뮬레이션 데이터 퍼블리싱 주기 (초당 100회, if on)
      
    # 차량 시뮬레이션
    vehicle:
      speed: 5.0              # 미터/초 - 기본 전진 속도
      
    # 오도메트리 시뮬레이션 설정
    odometry_simulation:
      enable: true           # 내부 오도메트리 시뮬레이션 활성화 여부
                             # false: robot_localization 등 외부 odometry 사용
                             # true: 내부 시뮬레이터로 noisy odometry 생성
      
    # 센서 시뮬레이션
    sensors:
      # 콘 감지 파라미터
      cone_detection:
        max_range: 15.0       # 미터 - 최대 감지 거리
        fov_deg: 120.0        # 도(degree) - 시야각 (Field of View)
        roi_type: "sector"    # 관심 영역 형태: "sector" (부채꼴) 또는 "rectangle" (직사각형)
        
      # 관측 노이즈 파라미터
      noise:
        position_stddev: 0.03 # 미터 - 콘 위치 측정 노이즈 표준편차
        
        # IMU 노이즈 파라미터 (Allan Variance 기반)
        # 참고: MEMS IMU (예: MPU9250) 기준
        imu_gyro_noise_density: 0.005    # rad/s/√Hz - 자이로 노이즈 밀도
        imu_gyro_bias_stability: 0.1     # rad/s - 자이로 바이어스 안정성
        imu_gyro_random_walk: 0.00001   # rad/s²/√Hz - 자이로 랜덤워크
        
        imu_accel_noise_density: 0.01    # m/s²/√Hz - 가속도계 노이즈 밀도  
        imu_accel_bias_stability: 0.01   # m/s² - 가속도계 바이어스 안정성
        imu_accel_random_walk: 0.0001    # m/s³/√Hz - 가속도계 랜덤워크
        
        # RTK GPS 노이즈 파라미터
        gps_mode: "rtk"                  # "single", "dgps", "rtk_float", "rtk_fix"
        gps_rtk_fix_noise_h: 0.02        # m - RTK Fix 수평 노이즈 (2cm)
        gps_rtk_fix_noise_v: 0.04        # m - RTK Fix 수직 노이즈 (4cm)
        gps_rtk_float_noise_h: 0.3       # m - RTK Float 수평 노이즈
        gps_rtk_float_noise_v: 0.5       # m - RTK Float 수직 노이즈
        gps_single_noise_h: 2.0          # m - Single 수평 노이즈
        gps_single_noise_v: 5.0          # m - Single 수직 노이즈
        
        # 오도메트리 드리프트 (축별 독립 제어)
        # 휠 오도메트리는 주로 거리 기반 오차, IMU는 시간 기반 오차
        odom_drift_x:
          systematic: 0.02        # % - 전진 바이어스 (이동거리의 %)
          random_stddev: 0.02     # m - 전진 랜덤 노이즈 (1회당)
        odom_drift_y:
          systematic: 0.02        # % - 측면 드리프트 (전진거리의 % - 휠 정렬 불량)
          random_stddev: 0.02   # m - 측면 랜덤 노이즈 (1회당)
        odom_drift_theta:
          systematic: 0.02        # % - 회전 바이어스 (실제 회전량의 %)
          random_stddev: 0.02   # rad/m - 방향 랜덤 노이즈 (1m 이동당; 휠 오도메트리)
          # time_bias: 0.0       # rad/s - 시간 기반 바이어스 (정지시에도 적용; IMU 오도메트리) - 미구현
        

        
      # 감지 오류 시뮬레이션 (LiDAR + 카메라 융합 문제)
      detection_errors:
        enable: true          # 거짓 양성/음성 시뮬레이션 활성화
        false_negative_rate: 0.0  # 콘을 놓칠 확률 (7%)
        false_positive_rate: 0.00  # 가짜 콘을 감지할 확률 (0.2%)
        wrong_color_rate: 0.00     # 잘못된 색상으로 분류할 확률 (0.2%)
        unknown_color_rate: 0.0   # 색상을 알 수 없음으로 분류할 확률 (8%, 융합 실패)
        
    # 시각화 설정
    visualization:
      publish_ground_truth_cones: true  # 실제 콘 위치 시각화
      publish_centerline: true          # 중심선 경로 시각화
      publish_roi: true                 # 관심 영역(ROI) 시각화